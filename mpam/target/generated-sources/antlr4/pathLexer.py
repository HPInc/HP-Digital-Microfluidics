# Generated from java-escape by ANTLR 4.4
from antlr4 import *
from io import StringIO

def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\'")
        buf.write("\u014a\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\3\2\3\2\3\2\3\2")
        buf.write("\3\2\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3")
        buf.write("\5\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\b\3\b\3\b")
        buf.write("\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3")
        buf.write("\n\3\n\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3")
        buf.write("\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17")
        buf.write("\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21")
        buf.write("\3\21\3\21\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\24")
        buf.write("\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26")
        buf.write("\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32")
        buf.write("\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34")
        buf.write("\3\34\3\34\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\37\3\37")
        buf.write("\3\37\3\37\3\37\3\37\3 \3 \3!\3!\3\"\3\"\5\"\u00e9\n\"")
        buf.write("\3#\3#\5#\u00ed\n#\3$\3$\3$\5$\u00f2\n$\3$\7$\u00f5\n")
        buf.write("$\f$\16$\u00f8\13$\3$\5$\u00fb\n$\3%\6%\u00fe\n%\r%\16")
        buf.write("%\u00ff\3%\3%\6%\u0104\n%\r%\16%\u0105\7%\u0108\n%\f%")
        buf.write("\16%\u010b\13%\3&\3&\5&\u010f\n&\3&\3&\3\'\3\'\3\'\3\'")
        buf.write("\5\'\u0117\n\'\3\'\3\'\3\'\5\'\u011c\n\'\3(\3(\3(\3(\7")
        buf.write("(\u0122\n(\f(\16(\u0125\13(\3(\3(\3)\3)\3)\3)\7)\u012d")
        buf.write("\n)\f)\16)\u0130\13)\3)\5)\u0133\n)\3)\3)\3)\3)\3*\3*")
        buf.write("\3*\3*\7*\u013d\n*\f*\16*\u0140\13*\3*\3*\3*\3*\3*\3+")
        buf.write("\3+\3+\3+\5\u0123\u012e\u013e\2,\3\3\5\4\7\5\t\6\13\7")
        buf.write("\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21")
        buf.write("!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67")
        buf.write("\359\36;\37= ?\2A\2C\2E\2G!I\"K\2M#O$Q%S&U\'\3\2\7\4\2")
        buf.write("C\\c|\3\2\62;\4\2GGgg\7\2$$^^ppttvv\5\2\13\f\17\17\"\"")
        buf.write("\u0154\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2")
        buf.write("\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2")
        buf.write("\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33")
        buf.write("\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2")
        buf.write("\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2")
        buf.write("\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2")
        buf.write("\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2G\3\2")
        buf.write("\2\2\2I\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3")
        buf.write("\2\2\2\2U\3\2\2\2\3W\3\2\2\2\5\\\3\2\2\2\7_\3\2\2\2\t")
        buf.write("g\3\2\2\2\13i\3\2\2\2\ro\3\2\2\2\17s\3\2\2\2\21w\3\2\2")
        buf.write("\2\23\177\3\2\2\2\25\u0085\3\2\2\2\27\u0087\3\2\2\2\31")
        buf.write("\u008d\3\2\2\2\33\u0093\3\2\2\2\35\u009a\3\2\2\2\37\u009c")
        buf.write("\3\2\2\2!\u00a2\3\2\2\2#\u00a9\3\2\2\2%\u00ac\3\2\2\2")
        buf.write("\'\u00b1\3\2\2\2)\u00b5\3\2\2\2+\u00ba\3\2\2\2-\u00bf")
        buf.write("\3\2\2\2/\u00c2\3\2\2\2\61\u00c4\3\2\2\2\63\u00c6\3\2")
        buf.write("\2\2\65\u00cb\3\2\2\2\67\u00d0\3\2\2\29\u00d5\3\2\2\2")
        buf.write(";\u00d7\3\2\2\2=\u00dc\3\2\2\2?\u00e2\3\2\2\2A\u00e4\3")
        buf.write("\2\2\2C\u00e8\3\2\2\2E\u00ec\3\2\2\2G\u00f1\3\2\2\2I\u00fd")
        buf.write("\3\2\2\2K\u010c\3\2\2\2M\u011b\3\2\2\2O\u011d\3\2\2\2")
        buf.write("Q\u0128\3\2\2\2S\u0138\3\2\2\2U\u0146\3\2\2\2WX\7f\2\2")
        buf.write("XY\7q\2\2YZ\7y\2\2Z[\7p\2\2[\4\3\2\2\2\\]\7w\2\2]^\7r")
        buf.write("\2\2^\6\3\2\2\2_`\7v\2\2`a\7j\2\2ab\7t\2\2bc\7q\2\2cd")
        buf.write("\7w\2\2de\7i\2\2ef\7j\2\2f\b\3\2\2\2gh\7?\2\2h\n\3\2\2")
        buf.write("\2ij\7p\2\2jk\7q\2\2kl\7t\2\2lm\7v\2\2mn\7j\2\2n\f\3\2")
        buf.write("\2\2op\7h\2\2pq\7q\2\2qr\7t\2\2r\16\3\2\2\2st\7t\2\2t")
        buf.write("u\7q\2\2uv\7y\2\2v\20\3\2\2\2wx\7d\2\2xy\7c\2\2yz\7t\2")
        buf.write("\2z{\7t\2\2{|\7k\2\2|}\7g\2\2}~\7t\2\2~\22\3\2\2\2\177")
        buf.write("\u0080\7r\2\2\u0080\u0081\7c\2\2\u0081\u0082\7w\2\2\u0082")
        buf.write("\u0083\7u\2\2\u0083\u0084\7g\2\2\u0084\24\3\2\2\2\u0085")
        buf.write("\u0086\7*\2\2\u0086\26\3\2\2\2\u0087\u0088\7t\2\2\u0088")
        buf.write("\u0089\7g\2\2\u0089\u008a\7c\2\2\u008a\u008b\7e\2\2\u008b")
        buf.write("\u008c\7j\2\2\u008c\30\3\2\2\2\u008d\u008e\7v\2\2\u008e")
        buf.write("\u008f\7k\2\2\u008f\u0090\7e\2\2\u0090\u0091\7m\2\2\u0091")
        buf.write("\u0092\7u\2\2\u0092\32\3\2\2\2\u0093\u0094\7e\2\2\u0094")
        buf.write("\u0095\7q\2\2\u0095\u0096\7n\2\2\u0096\u0097\7w\2\2\u0097")
        buf.write("\u0098\7o\2\2\u0098\u0099\7p\2\2\u0099\34\3\2\2\2\u009a")
        buf.write("\u009b\7.\2\2\u009b\36\3\2\2\2\u009c\u009d\7t\2\2\u009d")
        buf.write("\u009e\7k\2\2\u009e\u009f\7i\2\2\u009f\u00a0\7j\2\2\u00a0")
        buf.write("\u00a1\7v\2\2\u00a1 \3\2\2\2\u00a2\u00a3\7c\2\2\u00a3")
        buf.write("\u00a4\7d\2\2\u00a4\u00a5\7u\2\2\u00a5\u00a6\7q\2\2\u00a6")
        buf.write("\u00a7\7t\2\2\u00a7\u00a8\7d\2\2\u00a8\"\3\2\2\2\u00a9")
        buf.write("\u00aa\7c\2\2\u00aa\u00ab\7v\2\2\u00ab$\3\2\2\2\u00ac")
        buf.write("\u00ad\7y\2\2\u00ad\u00ae\7g\2\2\u00ae\u00af\7n\2\2\u00af")
        buf.write("\u00b0\7n\2\2\u00b0&\3\2\2\2\u00b1\u00b2\7e\2\2\u00b2")
        buf.write("\u00b3\7q\2\2\u00b3\u00b4\7n\2\2\u00b4(\3\2\2\2\u00b5")
        buf.write("\u00b6\7y\2\2\u00b6\u00b7\7g\2\2\u00b7\u00b8\7u\2\2\u00b8")
        buf.write("\u00b9\7v\2\2\u00b9*\3\2\2\2\u00ba\u00bb\7n\2\2\u00bb")
        buf.write("\u00bc\7g\2\2\u00bc\u00bd\7h\2\2\u00bd\u00be\7v\2\2\u00be")
        buf.write(",\3\2\2\2\u00bf\u00c0\7v\2\2\u00c0\u00c1\7q\2\2\u00c1")
        buf.write(".\3\2\2\2\u00c2\u00c3\7<\2\2\u00c3\60\3\2\2\2\u00c4\u00c5")
        buf.write("\7B\2\2\u00c5\62\3\2\2\2\u00c6\u00c7\7y\2\2\u00c7\u00c8")
        buf.write("\7c\2\2\u00c8\u00c9\7k\2\2\u00c9\u00ca\7v\2\2\u00ca\64")
        buf.write("\3\2\2\2\u00cb\u00cc\7r\2\2\u00cc\u00cd\7c\2\2\u00cd\u00ce")
        buf.write("\7u\2\2\u00ce\u00cf\7u\2\2\u00cf\66\3\2\2\2\u00d0\u00d1")
        buf.write("\7g\2\2\u00d1\u00d2\7c\2\2\u00d2\u00d3\7u\2\2\u00d3\u00d4")
        buf.write("\7v\2\2\u00d48\3\2\2\2\u00d5\u00d6\7+\2\2\u00d6:\3\2\2")
        buf.write("\2\u00d7\u00d8\7v\2\2\u00d8\u00d9\7k\2\2\u00d9\u00da\7")
        buf.write("e\2\2\u00da\u00db\7m\2\2\u00db<\3\2\2\2\u00dc\u00dd\7")
        buf.write("u\2\2\u00dd\u00de\7q\2\2\u00de\u00df\7w\2\2\u00df\u00e0")
        buf.write("\7v\2\2\u00e0\u00e1\7j\2\2\u00e1>\3\2\2\2\u00e2\u00e3")
        buf.write("\t\2\2\2\u00e3@\3\2\2\2\u00e4\u00e5\t\3\2\2\u00e5B\3\2")
        buf.write("\2\2\u00e6\u00e9\5? \2\u00e7\u00e9\5A!\2\u00e8\u00e6\3")
        buf.write("\2\2\2\u00e8\u00e7\3\2\2\2\u00e9D\3\2\2\2\u00ea\u00ed")
        buf.write("\5C\"\2\u00eb\u00ed\7a\2\2\u00ec\u00ea\3\2\2\2\u00ec\u00eb")
        buf.write("\3\2\2\2\u00edF\3\2\2\2\u00ee\u00f2\5? \2\u00ef\u00f0")
        buf.write("\7a\2\2\u00f0\u00f2\5E#\2\u00f1\u00ee\3\2\2\2\u00f1\u00ef")
        buf.write("\3\2\2\2\u00f2\u00f6\3\2\2\2\u00f3\u00f5\5E#\2\u00f4\u00f3")
        buf.write("\3\2\2\2\u00f5\u00f8\3\2\2\2\u00f6\u00f4\3\2\2\2\u00f6")
        buf.write("\u00f7\3\2\2\2\u00f7\u00fa\3\2\2\2\u00f8\u00f6\3\2\2\2")
        buf.write("\u00f9\u00fb\7A\2\2\u00fa\u00f9\3\2\2\2\u00fa\u00fb\3")
        buf.write("\2\2\2\u00fbH\3\2\2\2\u00fc\u00fe\5A!\2\u00fd\u00fc\3")
        buf.write("\2\2\2\u00fe\u00ff\3\2\2\2\u00ff\u00fd\3\2\2\2\u00ff\u0100")
        buf.write("\3\2\2\2\u0100\u0109\3\2\2\2\u0101\u0103\7a\2\2\u0102")
        buf.write("\u0104\5A!\2\u0103\u0102\3\2\2\2\u0104\u0105\3\2\2\2\u0105")
        buf.write("\u0103\3\2\2\2\u0105\u0106\3\2\2\2\u0106\u0108\3\2\2\2")
        buf.write("\u0107\u0101\3\2\2\2\u0108\u010b\3\2\2\2\u0109\u0107\3")
        buf.write("\2\2\2\u0109\u010a\3\2\2\2\u010aJ\3\2\2\2\u010b\u0109")
        buf.write("\3\2\2\2\u010c\u010e\t\4\2\2\u010d\u010f\7/\2\2\u010e")
        buf.write("\u010d\3\2\2\2\u010e\u010f\3\2\2\2\u010f\u0110\3\2\2\2")
        buf.write("\u0110\u0111\5I%\2\u0111L\3\2\2\2\u0112\u0113\5I%\2\u0113")
        buf.write("\u0114\7\60\2\2\u0114\u0116\5I%\2\u0115\u0117\5K&\2\u0116")
        buf.write("\u0115\3\2\2\2\u0116\u0117\3\2\2\2\u0117\u011c\3\2\2\2")
        buf.write("\u0118\u0119\5I%\2\u0119\u011a\5K&\2\u011a\u011c\3\2\2")
        buf.write("\2\u011b\u0112\3\2\2\2\u011b\u0118\3\2\2\2\u011cN\3\2")
        buf.write("\2\2\u011d\u0123\7$\2\2\u011e\u011f\7^\2\2\u011f\u0122")
        buf.write("\t\5\2\2\u0120\u0122\13\2\2\2\u0121\u011e\3\2\2\2\u0121")
        buf.write("\u0120\3\2\2\2\u0122\u0125\3\2\2\2\u0123\u0124\3\2\2\2")
        buf.write("\u0123\u0121\3\2\2\2\u0124\u0126\3\2\2\2\u0125\u0123\3")
        buf.write("\2\2\2\u0126\u0127\7$\2\2\u0127P\3\2\2\2\u0128\u0129\7")
        buf.write("\61\2\2\u0129\u012a\7\61\2\2\u012a\u012e\3\2\2\2\u012b")
        buf.write("\u012d\13\2\2\2\u012c\u012b\3\2\2\2\u012d\u0130\3\2\2")
        buf.write("\2\u012e\u012f\3\2\2\2\u012e\u012c\3\2\2\2\u012f\u0132")
        buf.write("\3\2\2\2\u0130\u012e\3\2\2\2\u0131\u0133\7\17\2\2\u0132")
        buf.write("\u0131\3\2\2\2\u0132\u0133\3\2\2\2\u0133\u0134\3\2\2\2")
        buf.write("\u0134\u0135\7\f\2\2\u0135\u0136\3\2\2\2\u0136\u0137\b")
        buf.write(")\2\2\u0137R\3\2\2\2\u0138\u0139\7\61\2\2\u0139\u013a")
        buf.write("\7,\2\2\u013a\u013e\3\2\2\2\u013b\u013d\13\2\2\2\u013c")
        buf.write("\u013b\3\2\2\2\u013d\u0140\3\2\2\2\u013e\u013f\3\2\2\2")
        buf.write("\u013e\u013c\3\2\2\2\u013f\u0141\3\2\2\2\u0140\u013e\3")
        buf.write("\2\2\2\u0141\u0142\7,\2\2\u0142\u0143\7\61\2\2\u0143\u0144")
        buf.write("\3\2\2\2\u0144\u0145\b*\2\2\u0145T\3\2\2\2\u0146\u0147")
        buf.write("\t\6\2\2\u0147\u0148\3\2\2\2\u0148\u0149\b+\2\2\u0149")
        buf.write("V\3\2\2\2\23\2\u00e8\u00ec\u00f1\u00f6\u00fa\u00ff\u0105")
        buf.write("\u0109\u010e\u0116\u011b\u0121\u0123\u012e\u0132\u013e")
        buf.write("\3\b\2\2")
        return buf.getvalue()
		

class pathLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__29 = 1
    T__28 = 2
    T__27 = 3
    T__26 = 4
    T__25 = 5
    T__24 = 6
    T__23 = 7
    T__22 = 8
    T__21 = 9
    T__20 = 10
    T__19 = 11
    T__18 = 12
    T__17 = 13
    T__16 = 14
    T__15 = 15
    T__14 = 16
    T__13 = 17
    T__12 = 18
    T__11 = 19
    T__10 = 20
    T__9 = 21
    T__8 = 22
    T__7 = 23
    T__6 = 24
    T__5 = 25
    T__4 = 26
    T__3 = 27
    T__2 = 28
    T__1 = 29
    T__0 = 30
    ID = 31
    INT = 32
    FLOAT = 33
    STRING = 34
    EOL_COMMENT = 35
    COMMENT = 36
    WS = 37


    modeNames = [ "DEFAULT_MODE" ]

    tokenNames = [ "<INVALID>",
            "'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", 
            "'\\u0005'", "'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", 
            "'\\u000B'", "'\f'", "'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", 
            "'\\u0011'", "'\\u0012'", "'\\u0013'", "'\\u0014'", "'\\u0015'", 
            "'\\u0016'", "'\\u0017'", "'\\u0018'", "'\\u0019'", "'\\u001A'", 
            "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", "'\\u001F'", 
            "' '", "'!'", "'\"'", "'#'", "'$'", "'%'" ]

    ruleNames = [ "T__29", "T__28", "T__27", "T__26", "T__25", "T__24", 
                  "T__23", "T__22", "T__21", "T__20", "T__19", "T__18", 
                  "T__17", "T__16", "T__15", "T__14", "T__13", "T__12", 
                  "T__11", "T__10", "T__9", "T__8", "T__7", "T__6", "T__5", 
                  "T__4", "T__3", "T__2", "T__1", "T__0", "ALPHA", "DIGIT", 
                  "ALNUM", "IDCHAR", "ID", "INT", "EXPT", "FLOAT", "STRING", 
                  "EOL_COMMENT", "COMMENT", "WS" ]

    grammarFileName = "path.g4"

    def __init__(self, input=None):
        super().__init__(input)
        self.checkVersion("4.4")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


