# Generated from DMF.g4 by ANTLR 4.9.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


from mpam.types import Dir, OnOff
from langsup.type_supp import Type


from mpam.types import Dir 



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\64")
        buf.write("\u018c\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\5")
        buf.write("\3\6\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13")
        buf.write("\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\17\3\17\3")
        buf.write("\17\3\17\3\17\3\20\3\20\3\21\3\21\3\21\3\22\3\22\3\22")
        buf.write("\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24")
        buf.write("\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26")
        buf.write("\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\31")
        buf.write("\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\33")
        buf.write("\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35")
        buf.write("\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37")
        buf.write("\3\37\3\37\3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3")
        buf.write("#\3#\3$\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3(\3(\3(\3)\3)\3")
        buf.write(")\3*\3*\3+\3+\3,\3,\3,\3,\3,\3,\3,\3-\3-\3.\3.\3/\3/\5")
        buf.write("/\u011c\n/\3\60\3\60\5\60\u0120\n\60\3\61\3\61\3\61\5")
        buf.write("\61\u0125\n\61\3\61\7\61\u0128\n\61\f\61\16\61\u012b\13")
        buf.write("\61\3\61\5\61\u012e\n\61\3\62\6\62\u0131\n\62\r\62\16")
        buf.write("\62\u0132\3\62\3\62\6\62\u0137\n\62\r\62\16\62\u0138\7")
        buf.write("\62\u013b\n\62\f\62\16\62\u013e\13\62\3\63\3\63\5\63\u0142")
        buf.write("\n\63\3\63\3\63\3\64\3\64\3\64\3\64\5\64\u014a\n\64\3")
        buf.write("\64\3\64\3\64\5\64\u014f\n\64\3\65\3\65\5\65\u0153\n\65")
        buf.write("\3\66\3\66\3\67\3\67\3\67\3\67\3\67\3\67\3\67\3\67\3\67")
        buf.write("\5\67\u0160\n\67\38\38\78\u0164\n8\f8\168\u0167\138\3")
        buf.write("8\38\39\39\39\39\79\u016f\n9\f9\169\u0172\139\39\59\u0175")
        buf.write("\n9\39\39\39\39\3:\3:\3:\3:\7:\u017f\n:\f:\16:\u0182\13")
        buf.write(":\3:\3:\3:\3:\3:\3;\3;\3;\3;\4\u0170\u0180\2<\3\3\5\4")
        buf.write("\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17")
        buf.write("\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63")
        buf.write("\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-")
        buf.write("Y\2[\2]\2_\2a.c/e\2g\60i\2k\2m\2o\61q\62s\63u\64\3\2\t")
        buf.write("\4\2C\\c|\3\2\62;\4\2GGgg\6\2\f\f\17\17$$^^\5\2\62;CH")
        buf.write("ch\b\2$$))^^ppttvv\5\2\13\f\17\17\"\"\2\u0194\2\3\3\2")
        buf.write("\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2")
        buf.write("\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2")
        buf.write("\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35")
        buf.write("\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2")
        buf.write("\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2")
        buf.write("\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2")
        buf.write("\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2")
        buf.write("\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2")
        buf.write("\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3")
        buf.write("\2\2\2\2W\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2g\3\2\2\2\2o")
        buf.write("\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\3w\3\2\2\2\5")
        buf.write("|\3\2\2\2\7~\3\2\2\2\t\u0080\3\2\2\2\13\u0083\3\2\2\2")
        buf.write("\r\u0086\3\2\2\2\17\u0088\3\2\2\2\21\u008a\3\2\2\2\23")
        buf.write("\u008c\3\2\2\2\25\u008e\3\2\2\2\27\u0090\3\2\2\2\31\u0093")
        buf.write("\3\2\2\2\33\u0098\3\2\2\2\35\u009a\3\2\2\2\37\u009f\3")
        buf.write("\2\2\2!\u00a1\3\2\2\2#\u00a4\3\2\2\2%\u00a9\3\2\2\2\'")
        buf.write("\u00ac\3\2\2\2)\u00b2\3\2\2\2+\u00b7\3\2\2\2-\u00bd\3")
        buf.write("\2\2\2/\u00c2\3\2\2\2\61\u00c7\3\2\2\2\63\u00cd\3\2\2")
        buf.write("\2\65\u00d2\3\2\2\2\67\u00d6\3\2\2\29\u00da\3\2\2\2;\u00e1")
        buf.write("\3\2\2\2=\u00e7\3\2\2\2?\u00eb\3\2\2\2A\u00ef\3\2\2\2")
        buf.write("C\u00f6\3\2\2\2E\u00f8\3\2\2\2G\u00fa\3\2\2\2I\u00fd\3")
        buf.write("\2\2\2K\u00ff\3\2\2\2M\u0101\3\2\2\2O\u0103\3\2\2\2Q\u0107")
        buf.write("\3\2\2\2S\u010a\3\2\2\2U\u010c\3\2\2\2W\u010e\3\2\2\2")
        buf.write("Y\u0115\3\2\2\2[\u0117\3\2\2\2]\u011b\3\2\2\2_\u011f\3")
        buf.write("\2\2\2a\u0124\3\2\2\2c\u0130\3\2\2\2e\u013f\3\2\2\2g\u014e")
        buf.write("\3\2\2\2i\u0152\3\2\2\2k\u0154\3\2\2\2m\u015f\3\2\2\2")
        buf.write("o\u0161\3\2\2\2q\u016a\3\2\2\2s\u017a\3\2\2\2u\u0188\3")
        buf.write("\2\2\2wx\7v\2\2xy\7w\2\2yz\7t\2\2z{\7p\2\2{\4\3\2\2\2")
        buf.write("|}\7}\2\2}\6\3\2\2\2~\177\7\177\2\2\177\b\3\2\2\2\u0080")
        buf.write("\u0081\7]\2\2\u0081\u0082\7]\2\2\u0082\n\3\2\2\2\u0083")
        buf.write("\u0084\7_\2\2\u0084\u0085\7_\2\2\u0085\f\3\2\2\2\u0086")
        buf.write("\u0087\7*\2\2\u0087\16\3\2\2\2\u0088\u0089\7+\2\2\u0089")
        buf.write("\20\3\2\2\2\u008a\u008b\7.\2\2\u008b\22\3\2\2\2\u008c")
        buf.write("\u008d\7]\2\2\u008d\24\3\2\2\2\u008e\u008f\7_\2\2\u008f")
        buf.write("\26\3\2\2\2\u0090\u0091\7v\2\2\u0091\u0092\7q\2\2\u0092")
        buf.write("\30\3\2\2\2\u0093\u0094\7y\2\2\u0094\u0095\7g\2\2\u0095")
        buf.write("\u0096\7n\2\2\u0096\u0097\7n\2\2\u0097\32\3\2\2\2\u0098")
        buf.write("\u0099\7%\2\2\u0099\34\3\2\2\2\u009a\u009b\7f\2\2\u009b")
        buf.write("\u009c\7t\2\2\u009c\u009d\7q\2\2\u009d\u009e\7r\2\2\u009e")
        buf.write("\36\3\2\2\2\u009f\u00a0\7B\2\2\u00a0 \3\2\2\2\u00a1\u00a2")
        buf.write("\7c\2\2\u00a2\u00a3\7v\2\2\u00a3\"\3\2\2\2\u00a4\u00a5")
        buf.write("\7i\2\2\u00a5\u00a6\7c\2\2\u00a6\u00a7\7v\2\2\u00a7\u00a8")
        buf.write("\7g\2\2\u00a8$\3\2\2\2\u00a9\u00aa\7w\2\2\u00aa\u00ab")
        buf.write("\7r\2\2\u00ab&\3\2\2\2\u00ac\u00ad\7p\2\2\u00ad\u00ae")
        buf.write("\7q\2\2\u00ae\u00af\7t\2\2\u00af\u00b0\7v\2\2\u00b0\u00b1")
        buf.write("\7j\2\2\u00b1(\3\2\2\2\u00b2\u00b3\7f\2\2\u00b3\u00b4")
        buf.write("\7q\2\2\u00b4\u00b5\7y\2\2\u00b5\u00b6\7p\2\2\u00b6*\3")
        buf.write("\2\2\2\u00b7\u00b8\7u\2\2\u00b8\u00b9\7q\2\2\u00b9\u00ba")
        buf.write("\7w\2\2\u00ba\u00bb\7v\2\2\u00bb\u00bc\7j\2\2\u00bc,\3")
        buf.write("\2\2\2\u00bd\u00be\7n\2\2\u00be\u00bf\7g\2\2\u00bf\u00c0")
        buf.write("\7h\2\2\u00c0\u00c1\7v\2\2\u00c1.\3\2\2\2\u00c2\u00c3")
        buf.write("\7y\2\2\u00c3\u00c4\7g\2\2\u00c4\u00c5\7u\2\2\u00c5\u00c6")
        buf.write("\7v\2\2\u00c6\60\3\2\2\2\u00c7\u00c8\7t\2\2\u00c8\u00c9")
        buf.write("\7k\2\2\u00c9\u00ca\7i\2\2\u00ca\u00cb\7j\2\2\u00cb\u00cc")
        buf.write("\7v\2\2\u00cc\62\3\2\2\2\u00cd\u00ce\7g\2\2\u00ce\u00cf")
        buf.write("\7c\2\2\u00cf\u00d0\7u\2\2\u00d0\u00d1\7v\2\2\u00d1\64")
        buf.write("\3\2\2\2\u00d2\u00d3\7t\2\2\u00d3\u00d4\7q\2\2\u00d4\u00d5")
        buf.write("\7y\2\2\u00d5\66\3\2\2\2\u00d6\u00d7\7e\2\2\u00d7\u00d8")
        buf.write("\7q\2\2\u00d8\u00d9\7n\2\2\u00d98\3\2\2\2\u00da\u00db")
        buf.write("\7e\2\2\u00db\u00dc\7q\2\2\u00dc\u00dd\7n\2\2\u00dd\u00de")
        buf.write("\7w\2\2\u00de\u00df\7o\2\2\u00df\u00e0\7p\2\2\u00e0:\3")
        buf.write("\2\2\2\u00e1\u00e2\7o\2\2\u00e2\u00e3\7c\2\2\u00e3\u00e4")
        buf.write("\7e\2\2\u00e4\u00e5\7t\2\2\u00e5\u00e6\7q\2\2\u00e6<\3")
        buf.write("\2\2\2\u00e7\u00e8\7r\2\2\u00e8\u00e9\7c\2\2\u00e9\u00ea")
        buf.write("\7f\2\2\u00ea>\3\2\2\2\u00eb\u00ec\7k\2\2\u00ec\u00ed")
        buf.write("\7p\2\2\u00ed\u00ee\7v\2\2\u00ee@\3\2\2\2\u00ef\u00f0")
        buf.write("\7,\2\2\u00f0\u00f1\7,\2\2\u00f1\u00f2\7a\2\2\u00f2\u00f3")
        buf.write("\7a\2\2\u00f3\u00f4\7,\2\2\u00f4\u00f5\7,\2\2\u00f5B\3")
        buf.write("\2\2\2\u00f6\u00f7\7-\2\2\u00f7D\3\2\2\2\u00f8\u00f9\7")
        buf.write("?\2\2\u00f9F\3\2\2\2\u00fa\u00fb\7)\2\2\u00fb\u00fc\7")
        buf.write("u\2\2\u00fcH\3\2\2\2\u00fd\u00fe\7\61\2\2\u00feJ\3\2\2")
        buf.write("\2\u00ff\u0100\7<\2\2\u0100L\3\2\2\2\u0101\u0102\7,\2")
        buf.write("\2\u0102N\3\2\2\2\u0103\u0104\7q\2\2\u0104\u0105\7h\2")
        buf.write("\2\u0105\u0106\7h\2\2\u0106P\3\2\2\2\u0107\u0108\7q\2")
        buf.write("\2\u0108\u0109\7p\2\2\u0109R\3\2\2\2\u010a\u010b\7/\2")
        buf.write("\2\u010bT\3\2\2\2\u010c\u010d\7=\2\2\u010dV\3\2\2\2\u010e")
        buf.write("\u010f\7v\2\2\u010f\u0110\7q\2\2\u0110\u0111\7i\2\2\u0111")
        buf.write("\u0112\7i\2\2\u0112\u0113\7n\2\2\u0113\u0114\7g\2\2\u0114")
        buf.write("X\3\2\2\2\u0115\u0116\t\2\2\2\u0116Z\3\2\2\2\u0117\u0118")
        buf.write("\t\3\2\2\u0118\\\3\2\2\2\u0119\u011c\5Y-\2\u011a\u011c")
        buf.write("\5[.\2\u011b\u0119\3\2\2\2\u011b\u011a\3\2\2\2\u011c^")
        buf.write("\3\2\2\2\u011d\u0120\5]/\2\u011e\u0120\7a\2\2\u011f\u011d")
        buf.write("\3\2\2\2\u011f\u011e\3\2\2\2\u0120`\3\2\2\2\u0121\u0125")
        buf.write("\5Y-\2\u0122\u0123\7a\2\2\u0123\u0125\5_\60\2\u0124\u0121")
        buf.write("\3\2\2\2\u0124\u0122\3\2\2\2\u0125\u0129\3\2\2\2\u0126")
        buf.write("\u0128\5_\60\2\u0127\u0126\3\2\2\2\u0128\u012b\3\2\2\2")
        buf.write("\u0129\u0127\3\2\2\2\u0129\u012a\3\2\2\2\u012a\u012d\3")
        buf.write("\2\2\2\u012b\u0129\3\2\2\2\u012c\u012e\7A\2\2\u012d\u012c")
        buf.write("\3\2\2\2\u012d\u012e\3\2\2\2\u012eb\3\2\2\2\u012f\u0131")
        buf.write("\5[.\2\u0130\u012f\3\2\2\2\u0131\u0132\3\2\2\2\u0132\u0130")
        buf.write("\3\2\2\2\u0132\u0133\3\2\2\2\u0133\u013c\3\2\2\2\u0134")
        buf.write("\u0136\7a\2\2\u0135\u0137\5[.\2\u0136\u0135\3\2\2\2\u0137")
        buf.write("\u0138\3\2\2\2\u0138\u0136\3\2\2\2\u0138\u0139\3\2\2\2")
        buf.write("\u0139\u013b\3\2\2\2\u013a\u0134\3\2\2\2\u013b\u013e\3")
        buf.write("\2\2\2\u013c\u013a\3\2\2\2\u013c\u013d\3\2\2\2\u013dd")
        buf.write("\3\2\2\2\u013e\u013c\3\2\2\2\u013f\u0141\t\4\2\2\u0140")
        buf.write("\u0142\7/\2\2\u0141\u0140\3\2\2\2\u0141\u0142\3\2\2\2")
        buf.write("\u0142\u0143\3\2\2\2\u0143\u0144\5c\62\2\u0144f\3\2\2")
        buf.write("\2\u0145\u0146\5c\62\2\u0146\u0147\7\60\2\2\u0147\u0149")
        buf.write("\5c\62\2\u0148\u014a\5e\63\2\u0149\u0148\3\2\2\2\u0149")
        buf.write("\u014a\3\2\2\2\u014a\u014f\3\2\2\2\u014b\u014c\5c\62\2")
        buf.write("\u014c\u014d\5e\63\2\u014d\u014f\3\2\2\2\u014e\u0145\3")
        buf.write("\2\2\2\u014e\u014b\3\2\2\2\u014fh\3\2\2\2\u0150\u0153")
        buf.write("\n\5\2\2\u0151\u0153\5m\67\2\u0152\u0150\3\2\2\2\u0152")
        buf.write("\u0151\3\2\2\2\u0153j\3\2\2\2\u0154\u0155\t\6\2\2\u0155")
        buf.write("l\3\2\2\2\u0156\u0157\7^\2\2\u0157\u0160\t\7\2\2\u0158")
        buf.write("\u0159\7^\2\2\u0159\u015a\7w\2\2\u015a\u015b\5k\66\2\u015b")
        buf.write("\u015c\5k\66\2\u015c\u015d\5k\66\2\u015d\u015e\5k\66\2")
        buf.write("\u015e\u0160\3\2\2\2\u015f\u0156\3\2\2\2\u015f\u0158\3")
        buf.write("\2\2\2\u0160n\3\2\2\2\u0161\u0165\7$\2\2\u0162\u0164\5")
        buf.write("i\65\2\u0163\u0162\3\2\2\2\u0164\u0167\3\2\2\2\u0165\u0163")
        buf.write("\3\2\2\2\u0165\u0166\3\2\2\2\u0166\u0168\3\2\2\2\u0167")
        buf.write("\u0165\3\2\2\2\u0168\u0169\7$\2\2\u0169p\3\2\2\2\u016a")
        buf.write("\u016b\7\61\2\2\u016b\u016c\7\61\2\2\u016c\u0170\3\2\2")
        buf.write("\2\u016d\u016f\13\2\2\2\u016e\u016d\3\2\2\2\u016f\u0172")
        buf.write("\3\2\2\2\u0170\u0171\3\2\2\2\u0170\u016e\3\2\2\2\u0171")
        buf.write("\u0174\3\2\2\2\u0172\u0170\3\2\2\2\u0173\u0175\7\17\2")
        buf.write("\2\u0174\u0173\3\2\2\2\u0174\u0175\3\2\2\2\u0175\u0176")
        buf.write("\3\2\2\2\u0176\u0177\7\f\2\2\u0177\u0178\3\2\2\2\u0178")
        buf.write("\u0179\b9\2\2\u0179r\3\2\2\2\u017a\u017b\7\61\2\2\u017b")
        buf.write("\u017c\7,\2\2\u017c\u0180\3\2\2\2\u017d\u017f\13\2\2\2")
        buf.write("\u017e\u017d\3\2\2\2\u017f\u0182\3\2\2\2\u0180\u0181\3")
        buf.write("\2\2\2\u0180\u017e\3\2\2\2\u0181\u0183\3\2\2\2\u0182\u0180")
        buf.write("\3\2\2\2\u0183\u0184\7,\2\2\u0184\u0185\7\61\2\2\u0185")
        buf.write("\u0186\3\2\2\2\u0186\u0187\b:\2\2\u0187t\3\2\2\2\u0188")
        buf.write("\u0189\t\b\2\2\u0189\u018a\3\2\2\2\u018a\u018b\b;\2\2")
        buf.write("\u018bv\3\2\2\2\24\2\u011b\u011f\u0124\u0129\u012d\u0132")
        buf.write("\u0138\u013c\u0141\u0149\u014e\u0152\u015f\u0165\u0170")
        buf.write("\u0174\u0180\3\b\2\2")
        return buf.getvalue()


class DMFLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    ADD = 33
    ASSIGN = 34
    ATTR = 35
    DIV = 36
    INJECT = 37
    MUL = 38
    OFF = 39
    ON = 40
    SUB = 41
    TERMINATOR = 42
    TOGGLE = 43
    ID = 44
    INT = 45
    FLOAT = 46
    STRING = 47
    EOL_COMMENT = 48
    COMMENT = 49
    WS = 50

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'turn'", "'{'", "'}'", "'[['", "']]'", "'('", "')'", "','", 
            "'['", "']'", "'to'", "'well'", "'#'", "'drop'", "'@'", "'at'", 
            "'gate'", "'up'", "'north'", "'down'", "'south'", "'left'", 
            "'west'", "'right'", "'east'", "'row'", "'col'", "'column'", 
            "'macro'", "'pad'", "'int'", "'**__**'", "'+'", "'='", "''s'", 
            "'/'", "':'", "'*'", "'off'", "'on'", "'-'", "';'", "'toggle'" ]

    symbolicNames = [ "<INVALID>",
            "ADD", "ASSIGN", "ATTR", "DIV", "INJECT", "MUL", "OFF", "ON", 
            "SUB", "TERMINATOR", "TOGGLE", "ID", "INT", "FLOAT", "STRING", 
            "EOL_COMMENT", "COMMENT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "ADD", "ASSIGN", "ATTR", "DIV", "INJECT", "MUL", "OFF", 
                  "ON", "SUB", "TERMINATOR", "TOGGLE", "ALPHA", "DIGIT", 
                  "ALNUM", "IDCHAR", "ID", "INT", "EXPT", "FLOAT", "STRING_CHAR", 
                  "HEX", "ESC_SEQ", "STRING", "EOL_COMMENT", "COMMENT", 
                  "WS" ]

    grammarFileName = "DMF.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


