# Generated from DMF.g4 by ANTLR 4.9.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


from mpam.types import Dir, OnOff
from langsup.type_supp import Type


from mpam.types import Dir 



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\67")
        buf.write("\u01a1\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3")
        buf.write("\5\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13")
        buf.write("\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\16\3\16\3\16")
        buf.write("\3\16\3\16\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\21\3\21")
        buf.write("\3\21\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\24")
        buf.write("\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\26")
        buf.write("\3\26\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30")
        buf.write("\3\30\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32")
        buf.write("\3\32\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34")
        buf.write("\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36")
        buf.write("\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3!")
        buf.write("\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3$\3$\3$\3$\3$\3")
        buf.write("$\3$\3%\3%\3&\3&\3\'\3\'\3\'\3(\3(\3)\3)\3*\3*\3+\3+\3")
        buf.write("+\3+\3,\3,\3,\3-\3-\3.\3.\3/\3/\3/\3/\3/\3/\3/\3\60\3")
        buf.write("\60\3\61\3\61\3\62\3\62\5\62\u0131\n\62\3\63\3\63\5\63")
        buf.write("\u0135\n\63\3\64\3\64\3\64\5\64\u013a\n\64\3\64\7\64\u013d")
        buf.write("\n\64\f\64\16\64\u0140\13\64\3\64\5\64\u0143\n\64\3\65")
        buf.write("\6\65\u0146\n\65\r\65\16\65\u0147\3\65\3\65\6\65\u014c")
        buf.write("\n\65\r\65\16\65\u014d\7\65\u0150\n\65\f\65\16\65\u0153")
        buf.write("\13\65\3\66\3\66\5\66\u0157\n\66\3\66\3\66\3\67\3\67\3")
        buf.write("\67\3\67\5\67\u015f\n\67\3\67\3\67\3\67\5\67\u0164\n\67")
        buf.write("\38\38\58\u0168\n8\39\39\3:\3:\3:\3:\3:\3:\3:\3:\3:\5")
        buf.write(":\u0175\n:\3;\3;\7;\u0179\n;\f;\16;\u017c\13;\3;\3;\3")
        buf.write("<\3<\3<\3<\7<\u0184\n<\f<\16<\u0187\13<\3<\5<\u018a\n")
        buf.write("<\3<\3<\3<\3<\3=\3=\3=\3=\7=\u0194\n=\f=\16=\u0197\13")
        buf.write("=\3=\3=\3=\3=\3=\3>\3>\3>\3>\4\u0185\u0195\2?\3\3\5\4")
        buf.write("\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17")
        buf.write("\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63")
        buf.write("\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-")
        buf.write("Y.[/]\60_\2a\2c\2e\2g\61i\62k\2m\63o\2q\2s\2u\64w\65y")
        buf.write("\66{\67\3\2\t\4\2C\\c|\3\2\62;\4\2GGgg\6\2\f\f\17\17$")
        buf.write("$^^\5\2\62;CHch\b\2$$))^^ppttvv\5\2\13\f\17\17\"\"\2\u01a9")
        buf.write("\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13")
        buf.write("\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3")
        buf.write("\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2")
        buf.write("\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2")
        buf.write("%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2")
        buf.write("\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67")
        buf.write("\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2")
        buf.write("A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2")
        buf.write("\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2")
        buf.write("\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2")
        buf.write("\2\2\2g\3\2\2\2\2i\3\2\2\2\2m\3\2\2\2\2u\3\2\2\2\2w\3")
        buf.write("\2\2\2\2y\3\2\2\2\2{\3\2\2\2\3}\3\2\2\2\5\177\3\2\2\2")
        buf.write("\7\u0081\3\2\2\2\t\u0084\3\2\2\2\13\u0087\3\2\2\2\r\u0089")
        buf.write("\3\2\2\2\17\u008b\3\2\2\2\21\u008d\3\2\2\2\23\u008f\3")
        buf.write("\2\2\2\25\u0091\3\2\2\2\27\u0094\3\2\2\2\31\u0099\3\2")
        buf.write("\2\2\33\u009b\3\2\2\2\35\u00a0\3\2\2\2\37\u00a2\3\2\2")
        buf.write("\2!\u00a5\3\2\2\2#\u00aa\3\2\2\2%\u00af\3\2\2\2\'\u00b3")
        buf.write("\3\2\2\2)\u00b8\3\2\2\2+\u00be\3\2\2\2-\u00c2\3\2\2\2")
        buf.write("/\u00c5\3\2\2\2\61\u00cb\3\2\2\2\63\u00d0\3\2\2\2\65\u00d6")
        buf.write("\3\2\2\2\67\u00db\3\2\2\29\u00e0\3\2\2\2;\u00e6\3\2\2")
        buf.write("\2=\u00eb\3\2\2\2?\u00ef\3\2\2\2A\u00f3\3\2\2\2C\u00fa")
        buf.write("\3\2\2\2E\u0100\3\2\2\2G\u0104\3\2\2\2I\u010b\3\2\2\2")
        buf.write("K\u010d\3\2\2\2M\u010f\3\2\2\2O\u0112\3\2\2\2Q\u0114\3")
        buf.write("\2\2\2S\u0116\3\2\2\2U\u0118\3\2\2\2W\u011c\3\2\2\2Y\u011f")
        buf.write("\3\2\2\2[\u0121\3\2\2\2]\u0123\3\2\2\2_\u012a\3\2\2\2")
        buf.write("a\u012c\3\2\2\2c\u0130\3\2\2\2e\u0134\3\2\2\2g\u0139\3")
        buf.write("\2\2\2i\u0145\3\2\2\2k\u0154\3\2\2\2m\u0163\3\2\2\2o\u0167")
        buf.write("\3\2\2\2q\u0169\3\2\2\2s\u0174\3\2\2\2u\u0176\3\2\2\2")
        buf.write("w\u017f\3\2\2\2y\u018f\3\2\2\2{\u019d\3\2\2\2}~\7}\2\2")
        buf.write("~\4\3\2\2\2\177\u0080\7\177\2\2\u0080\6\3\2\2\2\u0081")
        buf.write("\u0082\7]\2\2\u0082\u0083\7]\2\2\u0083\b\3\2\2\2\u0084")
        buf.write("\u0085\7_\2\2\u0085\u0086\7_\2\2\u0086\n\3\2\2\2\u0087")
        buf.write("\u0088\7*\2\2\u0088\f\3\2\2\2\u0089\u008a\7+\2\2\u008a")
        buf.write("\16\3\2\2\2\u008b\u008c\7.\2\2\u008c\20\3\2\2\2\u008d")
        buf.write("\u008e\7]\2\2\u008e\22\3\2\2\2\u008f\u0090\7_\2\2\u0090")
        buf.write("\24\3\2\2\2\u0091\u0092\7v\2\2\u0092\u0093\7q\2\2\u0093")
        buf.write("\26\3\2\2\2\u0094\u0095\7y\2\2\u0095\u0096\7g\2\2\u0096")
        buf.write("\u0097\7n\2\2\u0097\u0098\7n\2\2\u0098\30\3\2\2\2\u0099")
        buf.write("\u009a\7%\2\2\u009a\32\3\2\2\2\u009b\u009c\7f\2\2\u009c")
        buf.write("\u009d\7t\2\2\u009d\u009e\7q\2\2\u009e\u009f\7r\2\2\u009f")
        buf.write("\34\3\2\2\2\u00a0\u00a1\7B\2\2\u00a1\36\3\2\2\2\u00a2")
        buf.write("\u00a3\7c\2\2\u00a3\u00a4\7v\2\2\u00a4 \3\2\2\2\u00a5")
        buf.write("\u00a6\7i\2\2\u00a6\u00a7\7c\2\2\u00a7\u00a8\7v\2\2\u00a8")
        buf.write("\u00a9\7g\2\2\u00a9\"\3\2\2\2\u00aa\u00ab\7g\2\2\u00ab")
        buf.write("\u00ac\7z\2\2\u00ac\u00ad\7k\2\2\u00ad\u00ae\7v\2\2\u00ae")
        buf.write("$\3\2\2\2\u00af\u00b0\7r\2\2\u00b0\u00b1\7c\2\2\u00b1")
        buf.write("\u00b2\7f\2\2\u00b2&\3\2\2\2\u00b3\u00b4\7v\2\2\u00b4")
        buf.write("\u00b5\7w\2\2\u00b5\u00b6\7t\2\2\u00b6\u00b7\7p\2\2\u00b7")
        buf.write("(\3\2\2\2\u00b8\u00b9\7u\2\2\u00b9\u00ba\7v\2\2\u00ba")
        buf.write("\u00bb\7c\2\2\u00bb\u00bc\7v\2\2\u00bc\u00bd\7g\2\2\u00bd")
        buf.write("*\3\2\2\2\u00be\u00bf\7v\2\2\u00bf\u00c0\7j\2\2\u00c0")
        buf.write("\u00c1\7g\2\2\u00c1,\3\2\2\2\u00c2\u00c3\7w\2\2\u00c3")
        buf.write("\u00c4\7r\2\2\u00c4.\3\2\2\2\u00c5\u00c6\7p\2\2\u00c6")
        buf.write("\u00c7\7q\2\2\u00c7\u00c8\7t\2\2\u00c8\u00c9\7v\2\2\u00c9")
        buf.write("\u00ca\7j\2\2\u00ca\60\3\2\2\2\u00cb\u00cc\7f\2\2\u00cc")
        buf.write("\u00cd\7q\2\2\u00cd\u00ce\7y\2\2\u00ce\u00cf\7p\2\2\u00cf")
        buf.write("\62\3\2\2\2\u00d0\u00d1\7u\2\2\u00d1\u00d2\7q\2\2\u00d2")
        buf.write("\u00d3\7w\2\2\u00d3\u00d4\7v\2\2\u00d4\u00d5\7j\2\2\u00d5")
        buf.write("\64\3\2\2\2\u00d6\u00d7\7n\2\2\u00d7\u00d8\7g\2\2\u00d8")
        buf.write("\u00d9\7h\2\2\u00d9\u00da\7v\2\2\u00da\66\3\2\2\2\u00db")
        buf.write("\u00dc\7y\2\2\u00dc\u00dd\7g\2\2\u00dd\u00de\7u\2\2\u00de")
        buf.write("\u00df\7v\2\2\u00df8\3\2\2\2\u00e0\u00e1\7t\2\2\u00e1")
        buf.write("\u00e2\7k\2\2\u00e2\u00e3\7i\2\2\u00e3\u00e4\7j\2\2\u00e4")
        buf.write("\u00e5\7v\2\2\u00e5:\3\2\2\2\u00e6\u00e7\7g\2\2\u00e7")
        buf.write("\u00e8\7c\2\2\u00e8\u00e9\7u\2\2\u00e9\u00ea\7v\2\2\u00ea")
        buf.write("<\3\2\2\2\u00eb\u00ec\7t\2\2\u00ec\u00ed\7q\2\2\u00ed")
        buf.write("\u00ee\7y\2\2\u00ee>\3\2\2\2\u00ef\u00f0\7e\2\2\u00f0")
        buf.write("\u00f1\7q\2\2\u00f1\u00f2\7n\2\2\u00f2@\3\2\2\2\u00f3")
        buf.write("\u00f4\7e\2\2\u00f4\u00f5\7q\2\2\u00f5\u00f6\7n\2\2\u00f6")
        buf.write("\u00f7\7w\2\2\u00f7\u00f8\7o\2\2\u00f8\u00f9\7p\2\2\u00f9")
        buf.write("B\3\2\2\2\u00fa\u00fb\7o\2\2\u00fb\u00fc\7c\2\2\u00fc")
        buf.write("\u00fd\7e\2\2\u00fd\u00fe\7t\2\2\u00fe\u00ff\7q\2\2\u00ff")
        buf.write("D\3\2\2\2\u0100\u0101\7k\2\2\u0101\u0102\7p\2\2\u0102")
        buf.write("\u0103\7v\2\2\u0103F\3\2\2\2\u0104\u0105\7,\2\2\u0105")
        buf.write("\u0106\7,\2\2\u0106\u0107\7a\2\2\u0107\u0108\7a\2\2\u0108")
        buf.write("\u0109\7,\2\2\u0109\u010a\7,\2\2\u010aH\3\2\2\2\u010b")
        buf.write("\u010c\7-\2\2\u010cJ\3\2\2\2\u010d\u010e\7?\2\2\u010e")
        buf.write("L\3\2\2\2\u010f\u0110\7)\2\2\u0110\u0111\7u\2\2\u0111")
        buf.write("N\3\2\2\2\u0112\u0113\7\61\2\2\u0113P\3\2\2\2\u0114\u0115")
        buf.write("\7<\2\2\u0115R\3\2\2\2\u0116\u0117\7,\2\2\u0117T\3\2\2")
        buf.write("\2\u0118\u0119\7q\2\2\u0119\u011a\7h\2\2\u011a\u011b\7")
        buf.write("h\2\2\u011bV\3\2\2\2\u011c\u011d\7q\2\2\u011d\u011e\7")
        buf.write("p\2\2\u011eX\3\2\2\2\u011f\u0120\7/\2\2\u0120Z\3\2\2\2")
        buf.write("\u0121\u0122\7=\2\2\u0122\\\3\2\2\2\u0123\u0124\7v\2\2")
        buf.write("\u0124\u0125\7q\2\2\u0125\u0126\7i\2\2\u0126\u0127\7i")
        buf.write("\2\2\u0127\u0128\7n\2\2\u0128\u0129\7g\2\2\u0129^\3\2")
        buf.write("\2\2\u012a\u012b\t\2\2\2\u012b`\3\2\2\2\u012c\u012d\t")
        buf.write("\3\2\2\u012db\3\2\2\2\u012e\u0131\5_\60\2\u012f\u0131")
        buf.write("\5a\61\2\u0130\u012e\3\2\2\2\u0130\u012f\3\2\2\2\u0131")
        buf.write("d\3\2\2\2\u0132\u0135\5c\62\2\u0133\u0135\7a\2\2\u0134")
        buf.write("\u0132\3\2\2\2\u0134\u0133\3\2\2\2\u0135f\3\2\2\2\u0136")
        buf.write("\u013a\5_\60\2\u0137\u0138\7a\2\2\u0138\u013a\5e\63\2")
        buf.write("\u0139\u0136\3\2\2\2\u0139\u0137\3\2\2\2\u013a\u013e\3")
        buf.write("\2\2\2\u013b\u013d\5e\63\2\u013c\u013b\3\2\2\2\u013d\u0140")
        buf.write("\3\2\2\2\u013e\u013c\3\2\2\2\u013e\u013f\3\2\2\2\u013f")
        buf.write("\u0142\3\2\2\2\u0140\u013e\3\2\2\2\u0141\u0143\7A\2\2")
        buf.write("\u0142\u0141\3\2\2\2\u0142\u0143\3\2\2\2\u0143h\3\2\2")
        buf.write("\2\u0144\u0146\5a\61\2\u0145\u0144\3\2\2\2\u0146\u0147")
        buf.write("\3\2\2\2\u0147\u0145\3\2\2\2\u0147\u0148\3\2\2\2\u0148")
        buf.write("\u0151\3\2\2\2\u0149\u014b\7a\2\2\u014a\u014c\5a\61\2")
        buf.write("\u014b\u014a\3\2\2\2\u014c\u014d\3\2\2\2\u014d\u014b\3")
        buf.write("\2\2\2\u014d\u014e\3\2\2\2\u014e\u0150\3\2\2\2\u014f\u0149")
        buf.write("\3\2\2\2\u0150\u0153\3\2\2\2\u0151\u014f\3\2\2\2\u0151")
        buf.write("\u0152\3\2\2\2\u0152j\3\2\2\2\u0153\u0151\3\2\2\2\u0154")
        buf.write("\u0156\t\4\2\2\u0155\u0157\7/\2\2\u0156\u0155\3\2\2\2")
        buf.write("\u0156\u0157\3\2\2\2\u0157\u0158\3\2\2\2\u0158\u0159\5")
        buf.write("i\65\2\u0159l\3\2\2\2\u015a\u015b\5i\65\2\u015b\u015c")
        buf.write("\7\60\2\2\u015c\u015e\5i\65\2\u015d\u015f\5k\66\2\u015e")
        buf.write("\u015d\3\2\2\2\u015e\u015f\3\2\2\2\u015f\u0164\3\2\2\2")
        buf.write("\u0160\u0161\5i\65\2\u0161\u0162\5k\66\2\u0162\u0164\3")
        buf.write("\2\2\2\u0163\u015a\3\2\2\2\u0163\u0160\3\2\2\2\u0164n")
        buf.write("\3\2\2\2\u0165\u0168\n\5\2\2\u0166\u0168\5s:\2\u0167\u0165")
        buf.write("\3\2\2\2\u0167\u0166\3\2\2\2\u0168p\3\2\2\2\u0169\u016a")
        buf.write("\t\6\2\2\u016ar\3\2\2\2\u016b\u016c\7^\2\2\u016c\u0175")
        buf.write("\t\7\2\2\u016d\u016e\7^\2\2\u016e\u016f\7w\2\2\u016f\u0170")
        buf.write("\5q9\2\u0170\u0171\5q9\2\u0171\u0172\5q9\2\u0172\u0173")
        buf.write("\5q9\2\u0173\u0175\3\2\2\2\u0174\u016b\3\2\2\2\u0174\u016d")
        buf.write("\3\2\2\2\u0175t\3\2\2\2\u0176\u017a\7$\2\2\u0177\u0179")
        buf.write("\5o8\2\u0178\u0177\3\2\2\2\u0179\u017c\3\2\2\2\u017a\u0178")
        buf.write("\3\2\2\2\u017a\u017b\3\2\2\2\u017b\u017d\3\2\2\2\u017c")
        buf.write("\u017a\3\2\2\2\u017d\u017e\7$\2\2\u017ev\3\2\2\2\u017f")
        buf.write("\u0180\7\61\2\2\u0180\u0181\7\61\2\2\u0181\u0185\3\2\2")
        buf.write("\2\u0182\u0184\13\2\2\2\u0183\u0182\3\2\2\2\u0184\u0187")
        buf.write("\3\2\2\2\u0185\u0186\3\2\2\2\u0185\u0183\3\2\2\2\u0186")
        buf.write("\u0189\3\2\2\2\u0187\u0185\3\2\2\2\u0188\u018a\7\17\2")
        buf.write("\2\u0189\u0188\3\2\2\2\u0189\u018a\3\2\2\2\u018a\u018b")
        buf.write("\3\2\2\2\u018b\u018c\7\f\2\2\u018c\u018d\3\2\2\2\u018d")
        buf.write("\u018e\b<\2\2\u018ex\3\2\2\2\u018f\u0190\7\61\2\2\u0190")
        buf.write("\u0191\7,\2\2\u0191\u0195\3\2\2\2\u0192\u0194\13\2\2\2")
        buf.write("\u0193\u0192\3\2\2\2\u0194\u0197\3\2\2\2\u0195\u0196\3")
        buf.write("\2\2\2\u0195\u0193\3\2\2\2\u0196\u0198\3\2\2\2\u0197\u0195")
        buf.write("\3\2\2\2\u0198\u0199\7,\2\2\u0199\u019a\7\61\2\2\u019a")
        buf.write("\u019b\3\2\2\2\u019b\u019c\b=\2\2\u019cz\3\2\2\2\u019d")
        buf.write("\u019e\t\b\2\2\u019e\u019f\3\2\2\2\u019f\u01a0\b>\2\2")
        buf.write("\u01a0|\3\2\2\2\24\2\u0130\u0134\u0139\u013e\u0142\u0147")
        buf.write("\u014d\u0151\u0156\u015e\u0163\u0167\u0174\u017a\u0185")
        buf.write("\u0189\u0195\3\b\2\2")
        return buf.getvalue()


class DMFLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    ADD = 36
    ASSIGN = 37
    ATTR = 38
    DIV = 39
    INJECT = 40
    MUL = 41
    OFF = 42
    ON = 43
    SUB = 44
    TERMINATOR = 45
    TOGGLE = 46
    ID = 47
    INT = 48
    FLOAT = 49
    STRING = 50
    EOL_COMMENT = 51
    COMMENT = 52
    WS = 53

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'{'", "'}'", "'[['", "']]'", "'('", "')'", "','", "'['", "']'", 
            "'to'", "'well'", "'#'", "'drop'", "'@'", "'at'", "'gate'", 
            "'exit'", "'pad'", "'turn'", "'state'", "'the'", "'up'", "'north'", 
            "'down'", "'south'", "'left'", "'west'", "'right'", "'east'", 
            "'row'", "'col'", "'column'", "'macro'", "'int'", "'**__**'", 
            "'+'", "'='", "''s'", "'/'", "':'", "'*'", "'off'", "'on'", 
            "'-'", "';'", "'toggle'" ]

    symbolicNames = [ "<INVALID>",
            "ADD", "ASSIGN", "ATTR", "DIV", "INJECT", "MUL", "OFF", "ON", 
            "SUB", "TERMINATOR", "TOGGLE", "ID", "INT", "FLOAT", "STRING", 
            "EOL_COMMENT", "COMMENT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "ADD", "ASSIGN", "ATTR", "DIV", 
                  "INJECT", "MUL", "OFF", "ON", "SUB", "TERMINATOR", "TOGGLE", 
                  "ALPHA", "DIGIT", "ALNUM", "IDCHAR", "ID", "INT", "EXPT", 
                  "FLOAT", "STRING_CHAR", "HEX", "ESC_SEQ", "STRING", "EOL_COMMENT", 
                  "COMMENT", "WS" ]

    grammarFileName = "DMF.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


