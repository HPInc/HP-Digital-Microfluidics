acceptvolume = macro(well w) {
  [[
    w[0]: off;
    w[1]: off;
    w[2]: off;
    w[3]: on;
    w[4]: on;
    w[5]: on;
    w[6]: on;
    w[7]: on;
    w[8]: off;
    w's gate: off;
  ]]
};

ensure_drop = macro(well w) {
  if w's volume < 1 drop {
     w's volume = 50 drops;
  }
};

dispense = macro(well w) -> drop {
  w : ensure_drop;
  
  [[ w[3]: on; w[4]: on; w[5]: on; w[6]: on; w[7]: off;]]
  [[ w[6]: off; w[0]: on; w[1]: on; w[2]: on; w's gate: on; ]]
  [[ w[3]: off; w[5]: off; ]]
  [[ w[4]: off; w[0]: off; w[2]: off;]]
  [[ w[1]: off;  w[4]: on; ]] 
  [[ w[3]: on; w[5]: on; w[6]: on; ]] 
  [[ w's gate: off; w's exit pad: on; ]]
  return w's exit pad's drop;
};

safe_direction = macro(well w) -> direction {
  return down if (w == well #0 
           		  or w == well #2
           		  or w == well #4
                  or w == well #6)
         else up;
};


d4d = macro(well w) {
  dir fwd = w's exit dir;
  dir safe = w: safe_direction;
  w : dispense : 3 in dir safe : 15 in dir fwd; 
  w : dispense : 3 in dir safe : 11 in dir fwd; 
  w : dispense : 3 in dir safe : 7 in dir fwd; 
  w : dispense : 3 in dir safe : 3 in dir fwd; 
};

d6d = macro(well w) {
  dir fwd = w's exit dir;
  dir safe = w: safe_direction;
  w : dispense : 1 in dir safe : 6 in dir fwd;
  w : dispense : 1 in dir safe : 4 in dir fwd;
  w : dispense : 2 in dir safe : 2 in dir fwd;
  w : dispense : 2 in dir fwd;
  w : dispense : 2 in dir safe;
  w : dispense;
};

d8d = macro(well w) {
  dir fwd = w's exit dir;
  dir safe = w: safe_direction;
  w : dispense : 5 in dir safe : 6 in dir fwd;
  w : dispense : 5 in dir safe : 4 in dir fwd; 
  w : dispense : 5 in dir safe : 2 in dir fwd; 
  w : dispense : 5 in dir safe : 0 in dir fwd; 
  w : dispense : 3 in dir safe : 6 in dir fwd; 
  w : dispense : 3 in dir safe : 4 in dir fwd; 
  w : dispense : 3 in dir safe : 2 in dir fwd; 
  w : dispense : 3 in dir safe : 0 in dir fwd; 
};

mix = macro(pad center, dir to_d1, dir to_d2) -> drop {
  [[
     (center + to_d1)'s drop : unsafe_walk(to_d1 turned around);
     (center + to_d2)'s drop : unsafe_walk(to_d2 turned around);
  ]]
  return center's drop;
};

collide = macro(well 1, well 2, pad dest, dir to_d1) {
  dir to_d2 = to_d1 turned around;
  [[
      well 1 : dispense drop : to dest + to_d1;
      well 2 : dispense drop : to dest + to_d2;
  ]]
  mix(dest, to_d1, to_d2);
};



test = macro() {
  well #3's reagent = reagent "A";
  well #3's volume = 10 drops;
  well #7's reagent = reagent "B";
  well #7's volume = 10 drops; 
  collide(well #3, well #7, (3,3), west);
};

remove_after = macro(time t) {
  macro(drop d) {
    wait t;
    d: remove from the board;
  };
};

walk_across = macro(well source, well dest) {
  pad ep = dest's exit pad;
  source : dispense drop
         : to row 4
         : to col ep's column
         : to ep
         : enter well;
};



